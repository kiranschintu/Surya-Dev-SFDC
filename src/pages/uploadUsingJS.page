<apex:page Controller="ReadcsvFileUingjs" sidebar="false">
<html>
<head>
 <apex:pagemessages ></apex:pagemessages>
<script>
 
    // Check for the various File API support.
    if (window.File && window.FileReader && window.FileList && window.Blob) {
      // Great success! All the File APIs are supported.
    } else {
      alert('The File APIs are not fully supported in this browser.');
    }
 
</script>
 
</head>
<body>
 
    <input type="file" id="files" name="files[]" />
    <output id="list"></output>
    
    <table id="outputTable">    
    </table>
 
    <script>
    
      var table = document.getElementById('outputTable');
    
      function parseCSV(text, lineTerminator, cellTerminator) {
      
        //break the lines apart
        var lines = text.split(lineTerminator);
        alert(lines.length);
        var totfiels= lines.length / 2;   //this line of code is for batch apex
        //var totfiels= lines.length;
        alert('totfiels==='+totfiels);
        
        
        /*for(var i = 1; i<totfiels; i++)
        {
            var newFile ='';
            newFile += lines[i]+lineTerminator;
            alert(newFile);
            if(newFile!=null && newFile!='')
            {
                methodOneInJavascript(newFile);
            }
        }*/
        
        /* == below code is for batch apex ==*/
        k=2;
        for(var i = 1; i<totfiels; i++)
        {
            var newFile ='';
            var num = (i+1)*100;
            /*for(var j = i * 2; j< num ; j++){
                if(lines[j] != "")
                {
                    newFile += lines[j]+lineTerminator;
                }
            }*/
            for(var j = k; j< num ; j++){
                if(lines[j] != "")
                {
                    newFile += lines[j]+lineTerminator;
                }
            }
            k=num;
            //alert('num==='+num +'=='+newFile);
            if(newFile!=null && newFile!='')
            {
                methodOneInJavascript(newFile);
            }
        }
      
      }
        
      function handleFileSelect(evt) {
        var files = evt.target.files; // FileList object
 
        // Loop through the FileList and populate the 'outputTable' with the data
        for (var i = 0, f; f = files[i]; i++) {
 
          var reader = new FileReader();
 
          // Closure to capture the file information.
          reader.onload = (function(theFile) {
            return function(e) {
            
              //call the parse function with the proper line terminator and cell terminator
              parseCSV(e.target.result, '\n', ',');
            
            };
          })(f);
 
          // Read the file as text
          reader.readAsText(f);
          
        }
      }
 
      document.getElementById('files').addEventListener('change', handleFileSelect, false);
    </script>
 
</body>
</html>
    <apex:form >
        <!--<apex:actionFunction action="{!ReadFile}" name="methodOneInJavascript" rerender="showstate">
            <apex:param name="firstParam" assignTo="{!nameFile}"/>
        </apex:actionFunction> -->
        
        <apex:commandButton value="Import" action="{!ReadFile}" >
        </apex:commandButton>
    </apex:form>
</apex:page>
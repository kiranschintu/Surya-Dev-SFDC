/**
 * Author   :   Surya
 * Desc     :   Controller class used to create demo RadarData to be used in Lightning Component
 * */
public class RadarChartData {
    
    @AuraEnabled
    public static String getLeadJSON(){
        
        List<Lead> lstLead = [SELECT Id, LeadSource FROM Lead limit 100 ];
        Map<String,Integer> mapLeadSource = new Map<String,Integer>();
        
        for(Lead l : lstLead)
        {
            if(mapLeadSource.containsKey(l.LeadSource))
            {
                mapLeadSource.put(l.LeadSource, mapLeadSource.get(l.LeadSource) + 1 ) ;
            }else{
                mapLeadSource.put(l.LeadSource, 1) ;        
            }
        }
        
        RadarDataWrapper radarData = new RadarDataWrapper();
        for(String key : mapLeadSource.keySet())
        {
            radarData.radarLabels.add(key);
            radarData.radarData.add(mapLeadSource.get(key));
        }
        
        return System.json.serialize(radarData);
    }
    
    /**
     * Wrapper class to serialize as JSON as return Value
     * */
    class RadarDataWrapper
    {
       public List<String> radarLabels {get;set;}
       public List<Integer> radarData {get;set;}
        
        public RadarDataWrapper(){
            radarLabels = new List<String>();
            radarData = new List<Integer>();
        }
    }
    
    @AuraEnabled
    public static String getResp(){
        CompletedPendingTaks response = new CompletedPendingTaks();
        response.Total = [select Count() from Task];
        response.completed = [select Count() from Task where Status='Completed'];
        return System.json.serialize(response);
    }
    
    class CompletedPendingTaks{
        public Integer completed{get;set;}
        public Integer Total{get;set;}
        
    }
    
}
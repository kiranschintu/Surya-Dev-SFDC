global class MassDeleteRecords implements Schedulable,Database.Batchable<sObject> {

global final string query;

    /*global MassDeleteRecords (String q)
    {
       query = q;
    }*/
    global void execute(SchedulableContext bc){
        //String qq = 'SELECT id, name FROM Account WHERE OwnerId = \'00590000000zui5\'';
        MassDeleteRecords md = new MassDeleteRecords();
        Database.executeBatch(md);
            
    }

    global Database.QueryLocator start(Database.BatchableContext BC){
        return Database.getQueryLocator([SELECT id, name FROM Account WHERE OwnerId = '00590000000zui5']);
    }

    global void execute(Database.BatchableContext BC, List<sObject> scope){
        delete scope;
    }


global void finish(Database.BatchableContext BC){
  // Get the ID of the AsyncApexJob representing this batch job  
  // from Database.BatchableContext.    
  // Query the AsyncApexJob object to retrieve the current job's information.  

 AsyncApexJob a = [Select Id, Status, NumberOfErrors, JobItemsProcessed,
   TotalJobItems, CreatedBy.Email
   from AsyncApexJob where Id =:BC.getJobId()];

  // Send an email to the Apex job's submitter notifying of job completion.  
  Messaging.SingleEmailMessage mail = new Messaging.SingleEmailMessage();
  String[] toAddresses = new String[] {a.CreatedBy.Email};
  mail.setToAddresses(toAddresses);
  mail.setSubject('Apex Sharing Recalculation ' + a.Status);
  mail.setPlainTextBody('The batch Apex job processed ' + a.TotalJobItems +
    ' batches with '+ a.NumberOfErrors + ' failures.');

  Messaging.sendEmail(new Messaging.SingleEmailMessage[] { mail });
  
}


}